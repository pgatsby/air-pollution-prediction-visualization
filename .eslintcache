[{"C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\App.js":"1","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\pages\\faq\\faq.page.jsx":"2","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\map\\pollution.data.js":"3","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\map\\map.component.jsx":"4","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\pages\\homepage\\homepage.page.jsx":"5","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\navbar\\navbar.component.jsx":"6","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\mapform\\mapform.component.jsx":"7","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\airquality\\airquality.component.jsx":"8","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\index.js":"9"},{"size":647,"mtime":1612865203275,"results":"10","hashOfConfig":"11"},{"size":10503,"mtime":1612695568394,"results":"12","hashOfConfig":"11"},{"size":2641,"mtime":1612741315169,"results":"13","hashOfConfig":"11"},{"size":1519,"mtime":1612864630794,"results":"14","hashOfConfig":"11"},{"size":1408,"mtime":1612891414089,"results":"15","hashOfConfig":"11"},{"size":1278,"mtime":1612860981622,"results":"16","hashOfConfig":"11"},{"size":651,"mtime":1612866236617,"results":"17","hashOfConfig":"11"},{"size":3223,"mtime":1613012886288,"results":"18","hashOfConfig":"11"},{"size":288,"mtime":1612599170120,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"d6wakk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\App.js",["42"],"import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport Navbar from \"./components/navbar/navbar.component.jsx\";\r\nimport HomePage from \"./pages/homepage/homepage.page.jsx\";\r\nimport FaqPage from \"./pages/faq/faq.page.jsx\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/faq\" component={FaqPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\pages\\faq\\faq.page.jsx",[],"C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\map\\pollution.data.js",[],"C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\map\\map.component.jsx",["43","44","45"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport ArcGISMap from \"@arcgis/core/Map\";\r\nimport MapView from \"@arcgis/core/views/MapView\";\r\nimport LayerList from \"@arcgis/core/widgets/LayerList\";\r\n\r\nimport POLLUTION_DATA from \"./pollution.data.js\";\r\nimport \"./map.style.scss\";\r\n\r\nfunction Map({ id }) {\r\n  const [state, setState] = useState({\r\n    id: id,\r\n    data: POLLUTION_DATA,\r\n  });\r\n\r\n  if (id !== state.id) {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        id: id,\r\n      };\r\n    });\r\n  }\r\n\r\n  const layers = [];\r\n  // console.log(state);\r\n  // console.log(state.id);\r\n\r\n  const mapDiv = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (mapDiv.current) {\r\n      // Initialize Map\r\n      const map = new ArcGISMap({\r\n        basemap: \"topo-vector\",\r\n      });\r\n\r\n      const view = new MapView({\r\n        map,\r\n        container: mapDiv.current,\r\n        center: [-118.2437, 34.0522],\r\n        zoom: 11,\r\n        minScale: 0,\r\n        maxScale: 10000,\r\n      });\r\n\r\n      state.data.map((data) => {\r\n        if (state.id === data.id) {\r\n          data.layers.map((layer) => {\r\n            layers.push(layer);\r\n          });\r\n        }\r\n      });\r\n\r\n      view.when(() => {\r\n        new LayerList({\r\n          view: view,\r\n          container: \"layerlist\",\r\n        });\r\n      });\r\n\r\n      view.ui.move(\"zoom\", \"top-right\");\r\n      map.addMany(layers);\r\n    }\r\n  }, [state]);\r\n\r\n  return <div className=\"mapDiv\" ref={mapDiv} id=\"map\"></div>;\r\n}\r\n\r\nexport default Map;\r\n","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\pages\\homepage\\homepage.page.jsx",[],"C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\navbar\\navbar.component.jsx",[],"C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\mapform\\mapform.component.jsx",["46","47"],"import React from \"react\";\r\n\r\nimport \"./mapform.style.scss\";\r\n\r\nconst MapForm = ({ handleSubmit, handleClick, id, className }) => (\r\n  <form onSubmit={handleSubmit} className={className}>\r\n    <button\r\n      className={\"btn btn-warning \" + (id == 1 ? \"active\" : \"\")}\r\n      name=\"id\"\r\n      value={1}\r\n      onClick={handleClick}\r\n      type=\"submit\"\r\n    >\r\n      Air Quality\r\n    </button>\r\n    <button\r\n      className={\"btn btn-warning \" + (id == 2 ? \"active\" : \"\")}\r\n      name=\"id\"\r\n      value={2}\r\n      onClick={handleClick}\r\n      type=\"submit\"\r\n    >\r\n      Causes of Air Pollution\r\n    </button>\r\n  </form>\r\n);\r\n\r\nexport default MapForm;\r\n","C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\components\\airquality\\airquality.component.jsx",[],"C:\\Users\\pgatsby\\Documents\\Projects\\air-pollution-prediction-visualization\\src\\index.js",[],["48","49"],{"ruleId":"50","severity":1,"message":"51","line":2,"column":25,"nodeType":"52","messageId":"53","endLine":2,"endColumn":33},{"ruleId":"54","severity":1,"message":"55","line":46,"column":29,"nodeType":"56","messageId":"57","endLine":46,"endColumn":31},{"ruleId":"54","severity":1,"message":"55","line":48,"column":35,"nodeType":"56","messageId":"57","endLine":48,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":64,"column":6,"nodeType":"60","endLine":64,"endColumn":13,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":43,"nodeType":"64","messageId":"65","endLine":8,"endColumn":45},{"ruleId":"62","severity":1,"message":"63","line":17,"column":43,"nodeType":"64","messageId":"65","endLine":17,"endColumn":45},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'layers'. Either include it or remove the dependency array.","ArrayExpression",["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["71"],"no-negated-in-lhs",["72"],{"desc":"73","fix":"74"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [layers, state]",{"range":"75","text":"76"},[1416,1423],"[layers, state]"]